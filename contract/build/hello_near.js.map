{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../src/models.ts","../src/contract.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.init();\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        const rawState = near.storageRead(\"STATE\");\n        if (rawState) {\n            const state = JSON.parse(rawState);\n            // reconstruction of the contract class object from plain object\n            let c = this.default();\n            Object.assign(this, state);\n            for (const item in c) {\n                if (c[item].constructor?.deserialize !== undefined) {\n                    this[item] = c[item].constructor.deserialize(this[item]);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n    init() { }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedMap {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.keyIndexPrefix = prefix + \"i\";\n        let indexKey = prefix + \"k\";\n        let indexValue = prefix + \"v\";\n        this.keys = new Vector(indexKey);\n        this.values = new Vector(indexValue);\n    }\n    len() {\n        let keysLen = this.keys.len();\n        let valuesLen = this.values.len();\n        if (keysLen != valuesLen) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysLen;\n    }\n    isEmpty() {\n        let keysIsEmpty = this.keys.isEmpty();\n        let valuesIsEmpty = this.values.isEmpty();\n        if (keysIsEmpty != valuesIsEmpty) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysIsEmpty;\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    getIndexRaw(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        return indexRaw;\n    }\n    get(key) {\n        let indexRaw = this.getIndexRaw(key);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            let value = this.values.get(index);\n            if (value) {\n                return value;\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n        return null;\n    }\n    set(key, value) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            return this.values.replace(index, value);\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.keys.push(key);\n            this.values.push(value);\n            return null;\n        }\n    }\n    remove(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastKey = this.keys.get(this.len() - 1);\n                if (!lastKey) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastKey != key) {\n                    let lastLookupKey = this.keyIndexPrefix + JSON.stringify(lastKey);\n                    near.storageWrite(lastLookupKey, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.keys.swapRemove(index);\n            return this.values.swapRemove(index);\n        }\n        return null;\n    }\n    clear() {\n        for (let key of this.keys) {\n            let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n            near.storageRemove(indexLookup);\n        }\n        this.keys.clear();\n        this.values.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    extend(kvs) {\n        for (let [k, v] of kvs) {\n            this.set(k, v);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let map = new UnorderedMap(data.prefix);\n        // reconstruct UnorderedMap\n        map.length = data.length;\n        // reconstruct keys Vector\n        map.keys = new Vector(data.prefix + \"k\");\n        map.keys.length = data.keys.length;\n        // reconstruct values Vector\n        map.values = new Vector(data.prefix + \"v\");\n        map.values.length = data.values.length;\n        return map;\n    }\n}\nclass UnorderedMapIterator {\n    constructor(unorderedMap) {\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.values = new VectorIterator(unorderedMap.values);\n    }\n    next() {\n        let key = this.keys.next();\n        let value = this.values.next();\n        if (key.done != value.done) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return { value: [key.value, value.value], done: key.done };\n    }\n}\n","import { Vector, UnorderedMap, near } from \"near-sdk-js\";\n\nexport enum RateEnum {\n  bad,\n  regular,\n  awesome,\n  none,\n}\n\nexport class BookInformation {\n  id: number;\n  owner: string;\n  isbn: string;\n  name: string;\n  description: string;\n  numpage: number;\n  author: string;\n  datepublished: string;\n  editions: number;\n  rates: Vector;\n  comments: UnorderedMap;\n  timestamp: number;\n\n  constructor(\n    id: number,\n    owner: string,\n    isbn: string,\n    name: string,\n    description: string,\n    numpage: number,\n    author: string,\n    datepublished: string,\n    editions: number,\n    timestamp: number\n  ) {\n    this.id = id;\n    this.owner = near.signerAccountId();\n    this.isbn = isbn;\n    this.name = name;\n    this.description = description;\n    this.numpage = numpage;\n    this.author = author;\n    this.rates = new Vector(\"rating\");\n    this.comments = new UnorderedMap(\"v\");\n    this.comments.set(owner, \"no comments yet\");\n    this.datepublished = datepublished;\n    this.editions = editions;\n    this.timestamp = timestamp;\n  }\n}\n\nexport class Rate {\n  owner: string;\n  rate: RateEnum;\n\n  constructor(_owner: string, _rate: RateEnum) {\n    this.owner = _owner;\n    this.rate = _rate;\n  }\n}\n","import {\n  NearBindgen,\n  NearContract,\n  near,\n  call,\n  view,\n  Vector,\n  assert,\n} from \"near-sdk-js\";\nimport { BookInformation, Rate } from \"./models\";\n\nconst MAX_DESCRIPTION_LENGTH = 255;\nconst MAX_BOOKPAGE_LENGTH = 1200;\n\n// The @NearBindgen decorator allows this code to compile to Base64.\n@NearBindgen\nexport class Contract extends NearContract {\n  private books: Vector;\n\n  constructor() {\n    //execute the NEAR Contract's constructor\n    super();\n    this.books = new Vector(\"books\");\n  }\n\n  default() {\n    return new Contract();\n  }\n\n  @call\n  AddBook({\n    isbn,\n    name,\n    description,\n    numpage,\n    author,\n    datepublished,\n    editions,\n  }: {\n    isbn: string;\n    name: string;\n    description: string;\n    numpage: number;\n    author: string;\n    datepublished: string;\n    editions: number;\n  }): void {\n    assert(isbn.length > 0, \"the ISBN is required\");\n    assert(name.length > 0, \"the name is required\");\n    assert(\n      description.length > 0 && description.length < MAX_DESCRIPTION_LENGTH,\n      \"the description is required or you exceed the character's number\"\n    );\n    assert(\n      numpage > 0 && numpage < MAX_BOOKPAGE_LENGTH,\n      \"the numpage is required or you exceed the page's number\"\n    );\n    assert(author.length > 0, \"the author is required\");\n    assert(datepublished.length > 0, \"the datepublished is required\");\n    assert(editions > 0, \"the editions is required\");\n\n    this.books.push(\n      new BookInformation(\n        this.books.len(),\n        near.signerAccountId(),\n        isbn,\n        name,\n        description,\n        numpage,\n        author,\n        datepublished,\n        editions,\n        Number(near.blockTimestamp())\n      )\n    );\n  }\n\n  @view\n  getBooks(): Array<BookInformation> {\n    return this.books.toArray() as Array<BookInformation>;\n  }\n\n  @view\n  getBook({ id }: { id: number }): BookInformation {\n    assert(id >= 0, \"id cannot be negative\");\n    assert(this.books.len() > 0, \"we haven't any Books\");\n    assert(id <= this.books.len() - 1, \"we haven't that Book\");\n    return this.books.get(id) as BookInformation;\n  }\n\n  @view\n  getNBooks(): number {\n    return this.books.len();\n  }\n\n  @call\n  rate({ id, valor }: { id: number; valor: number }): BookInformation {\n    assert(id < this.books.len(), \"we haven't that Book\");\n\n    const book = this.books.get(id) as BookInformation;\n    const key = `${near.signerAccountId()}${id}`;\n\n    book.rates.push(new Rate(key, valor));\n    this.books.replace(id, book);\n\n    return book;\n  }\n\n  @view\n  getRateBook({ id }: { id: number }): Array<Rate> {\n    assert(this.books.len() > 0, \"we haven't any Books\");\n    assert(id <= this.books.len() - 1, \"we haven't that Book\");\n\n    return (this.books.get(id) as BookInformation).rates.toArray() as Rate[];\n  }\n}\n"],"names":["call","target","key","descriptor","view","NearBindgen","_init","args","deserializeArgs","ret","init","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","signerAccountId","env","signer_account_id","read_register","blockTimestamp","block_timestamp","storageRead","storage_read","storageGetEvicted","input","PromiseResult","storageWrite","value","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","rawState","near","state","JSON","parse","c","default","assign","item","constructor","undefined","Error","stringify","serializeReturn","u8ArrayToBytes","array","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","assert","b","str","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","data","Uint32Array","buffer","Vector","len","isEmpty","get","storageKey","swapRemove","pop","last","push","element","lastIndex","lastKey","replace","extend","elements","Symbol","iterator","VectorIterator","clear","toArray","v","vector","current","next","done","UnorderedMap","keyIndexPrefix","indexKey","indexValue","keys","values","keysLen","valuesLen","keysIsEmpty","valuesIsEmpty","serializeIndex","deserializeIndex","rawIndex","getIndexRaw","indexLookup","indexRaw","set","nextIndex","nextIndexRaw","remove","lastLookupKey","UnorderedMapIterator","kvs","k","map","unorderedMap","RateEnum","BookInformation","id","owner","isbn","name","description","numpage","author","datepublished","editions","timestamp","rates","comments","Rate","_owner","_rate","rate","MAX_DESCRIPTION_LENGTH","MAX_BOOKPAGE_LENGTH","Contract","books","AddBook","Number","getBooks","getBook","getNBooks","valor","book","getRateBook"],"mappings":"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"}